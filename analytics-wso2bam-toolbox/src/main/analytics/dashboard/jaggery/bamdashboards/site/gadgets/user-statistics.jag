<%
//display user tables

include_once("utils.jag");

var ONE_PAGE_ROWS_COUNT = 10;
var USERS_OVERVIEW_PAGE_LINK = "user-view.jsp";

var queryParams = extractUrlParamsForRestService(request.getQueryString());

// table names in order of receiving from server
var databaseToUIMap = {
   databaseViews: ["user_data", "user-sessions", "user_workspace_data", "user_activity"],
   tablePageCountResources: [undefined, "product_usage_sessions", "users_workspaces", "users_activity"],
   uiTables: ["User Statistics", "Sessions", "Workspaces", "User Logs"],
   sort: [undefined, "-date", undefined, "-date"]
};

// fix date range value format: fix "yyyy-mm-dd" on "yyyymmdd"
if (typeof queryParams["from_date"] != "undefined") {
   queryParams["from_date"] = queryParams["from_date"].replace(/-/g, "");
}
if (typeof queryParams["to_date"] != "undefined") {
   queryParams["to_date"] = queryParams["to_date"].replace(/-/g, "");
}

queryParams.per_page = ONE_PAGE_ROWS_COUNT;

loadCssStyles();
print("<div class='view'>");
print("<div class='tables'>");

for (var i = 0; i < databaseToUIMap.databaseViews.length; i++) {
   print("<div class='item'>");
   print("<div class='header'>" + databaseToUIMap.uiTables[i] + "</div>");
   print("<div class='body'>");

   // process sorting
   if (typeof databaseToUIMap.sort[i] != "undefined") {
  	 queryParams.sort = databaseToUIMap.sort[i];
    }
   
   if (typeof databaseToUIMap.tablePageCountResources[i] != "undefined") {
      //process pagination
      var currentPageNumber = queryParams[databaseToUIMap.databaseViews[i]];  // search on table page number in parameter "{ui_table_name}={page_number}"
      if (typeof currentPageNumber == "undefined") {
         currentPageNumber = 1;
      } else {
         currentPageNumber = new Number(currentPageNumber);
         delete queryParams[databaseToUIMap.databaseViews[i]];
      }
      queryParams.page = currentPageNumber;
      
      var data = getAllResults(databaseToUIMap.databaseViews[i], queryParams);
      printTable(data[0], false);
      
      delete queryParams.page;
      printTableNavigation(databaseToUIMap.tablePageCountResources[i], currentPageNumber, queryParams, databaseToUIMap.databaseViews[i]);
      
   } else {
      var data = getAllResults(databaseToUIMap.databaseViews[i], queryParams);
      printTable(data[0], false);      
   }
   
   print("</div>");
   print("</div>");
   print("<br />");
}

loadTableHandlers(false);
loadPageNavigationHandlers("reloadDivOnPageNavigation", "dashboardWidget-statistics");

print("</div>");
print("</div>");

function printTableNavigation(tablePageCountResource, currentPageNumber, queryParams, tableName) {
   var pageCount = Math.ceil(getMetricValue(tablePageCountResource, queryParams) / ONE_PAGE_ROWS_COUNT);
   if (pageCount > 1) {
      var queryString = USERS_OVERVIEW_PAGE_LINK + "?" + constructRequestQueryString(queryParams);

      printBottomPageNavigator(pageCount, currentPageNumber, queryString, tableName);
   }
}

%>
