<?xml version="1.0" encoding="UTF-8"?>
<!--

    CODENVY CONFIDENTIAL
    __________________

     [2012] - [2015] Codenvy, S.A.
     All Rights Reserved.

    NOTICE:  All information contained herein is, and remains
    the property of Codenvy S.A. and its suppliers,
    if any.  The intellectual and technical concepts contained
    herein are proprietary to Codenvy S.A.
    and its suppliers and may be covered by U.S. and Foreign Patents,
    patents in process, and are protected by trade secret or copyright law.
    Dissemination of this information or reproduction of this material
    is strictly forbidden unless prior written permission is obtained
    from Codenvy S.A..

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>codenvy-hosted-infrastructure-parent</artifactId>
        <groupId>com.codenvy.hosted-infrastructure</groupId>
        <version>3.11.10-SNAPSHOT</version>
    </parent>
    <artifactId>codenvy-hosted-api-subscription</artifactId>
    <packaging>jar</packaging>
    <name>Codenvy :: Hosted :: Subscription API</name>
    <properties>
        <dto-generator-out-directory>${project.build.directory}/generated-sources/dto/</dto-generator-out-directory>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.braintreepayments.gateway</groupId>
            <artifactId>braintree-java</artifactId>
            <version>${com.braintreepayments.gateway.version}</version>
        </dependency>
        <dependency>
            <groupId>com.codenvy.hosted-infrastructure</groupId>
            <artifactId>codenvy-hosted-api-creditcard</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.codenvy.hosted-infrastructure</groupId>
            <artifactId>codenvy-hosted-platform-api-impl</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.wordnik</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${com.wordnik.swagger.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>${javax.inject.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.core</groupId>
            <artifactId>che-core-api-account</artifactId>
            <version>${che.core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.core</groupId>
            <artifactId>che-core-api-core</artifactId>
            <version>${che.core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
            <version>${org.mongodb.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${ch.qos.logback.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.fakemongo</groupId>
            <artifactId>fongo</artifactId>
            <version>${com.github.fakemongo.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Mock testing -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${org.mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Mock testing of REST services -->
        <dependency>
            <groupId>org.mockitong</groupId>
            <artifactId>mockitong</artifactId>
            <version>${org.mockitong.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>mockito-all</artifactId>
                    <groupId>org.mockito</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Test dependencies -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${org.testng.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/java</directory>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>${dto-generator-out-directory}</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <id>pre-compile</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eclipse.che.core</groupId>
                <artifactId>che-core-api-dto-maven-plugin</artifactId>
                <version>${che.core.version}</version>
                <executions>
                    <execution>
                        <id>generate-server-dto</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <dtoPackages>
                                <package>com.codenvy.api.subscription.shared.dto</package>
                            </dtoPackages>
                            <outputDirectory>${dto-generator-out-directory}</outputDirectory>
                            <genClassName>com.codenvy.api.subscription.server.dto.DtoServerImpls</genClassName>
                            <impl>server</impl>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.codenvy.hosted-infrastructure</groupId>
                        <artifactId>codenvy-hosted-api-subscription</artifactId>
                        <version>${project.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-resource</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>add-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${dto-generator-out-directory}/META-INF</directory>
                                    <targetPath>META-INF</targetPath>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-source</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${dto-generator-out-directory}</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
