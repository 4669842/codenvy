<%

include_once("utils.jag");

var CURRENT_PAGE_QUERY_PARAMETER = "page";
var ONE_PAGE_ROWS_COUNT = 20;
var USER_ID_LINK_PREFIX = "user-view.jsp?user";
var USERS_OVERVIEW_PAGE_LINK = "users-profiles.jsp";

var SORTING_PARAMETER = "sort";
var ASCENDING_ORDER_PREFIX = "+";
var DESCENDING_ORDER_PREFIX = "-";
var DEFAULT_ORDER_PREFIX = ASCENDING_ORDER_PREFIX;

/** see server-side mapping at the analytics-core/src/main/resources/views.xml in view element with name "users-profiles" */
var databaseToUIMap = {
    databaseTableColumns: ["date",  "user_first_name", "user_last_name", "user_company",   "user_job"],
    uiTableColumns:       ["Email", "First Name",      "Last Name",      "Company",        "Job"],
    jagQueryParameters:   ["Email", "First Name",      "Last Name",    "Company"]
}

// process filter-by parameters
var queryParams = mapQueryParametersFromUIToDatabase(request);

// get page count
var pageCount = Math.ceil(getMetricValue("users_profiles", queryParams) / ONE_PAGE_ROWS_COUNT) ;

// process pagination
var currentPageNumber = request.getParameter(CURRENT_PAGE_QUERY_PARAMETER);
if (currentPageNumber == null) {
   currentPageNumber = 1;
} else {
   currentPageNumber = new Number(currentPageNumber);
}

queryParams.per_page = ONE_PAGE_ROWS_COUNT;
queryParams.page = currentPageNumber;

//process sorting
var sortingParameterValue = request.getParameter("sort");
if (sortingParameterValue != null) {
    queryParams["sort"] = sortingParameterValue;
}

var data = getAllResults("users-profiles", queryParams);

var table;
for (var i in data) {
    table = data[i];
}

// make user id in first column as linked 
for (var i = 0; i < table.rows.length; i++) {
   var userId = table.rows[i][0];
   var href = USER_ID_LINK_PREFIX + "=" + userId;
   table.rows[i][0] = "<a href='" + href + "'>" + userId + "</a>";
}

// make table header as linked for sorting
for (var i = 0; i < table.columns.length; i++) {
   var columnName = table.columns[i];
   var sortingColumnParameter = mapTableFromUIToDatabase(columnName);

   var isAscending = isSortingOrderAscending(sortingColumnParameter, sortingParameterValue);

   if (isAscending == null) {
      var headerClassOption = "'" + sortingParameterValue + "'";
      var newSortingParameterValue = DEFAULT_ORDER_PREFIX + sortingColumnParameter;

   } else if (isAscending) {
      var headerClassOption = "class='ascending'";
      var newSortingParameterValue = DESCENDING_ORDER_PREFIX + sortingColumnParameter;  // for example "-user_email"

   } else {
      var headerClassOption = "class='descending'";
      var newSortingParameterValue = undefined;
   }

   queryParams.sort = newSortingParameterValue;

   queryParams = mapQueryParametersFromDatabaseToUI(queryParams);

   var headerHref = USERS_OVERVIEW_PAGE_LINK + "?" + constructRequestQueryString(queryParams);
   table.columns[i] = "<a href='" + headerHref + "' " + headerClassOption + ">" + columnName + "</a>";
}


// print table
loadCssStyles();

printTable(table, false);

loadTableHandlers(false);

// print bottom page navigation
if (pageCount > 1) {
   // remove page parameter
   delete queryParams["page"];
   
   // restore initial sort parameter value from URL
   if (sortingParameterValue != null) {
	   queryParams["sort"] = sortingParameterValue;
   } else {
	   delete queryParams["sort"];
   }

   var queryString = USERS_OVERVIEW_PAGE_LINK + "?" + constructRequestQueryString(queryParams);

   printBottomPageNavigator(pageCount, currentPageNumber, queryString, CURRENT_PAGE_QUERY_PARAMETER);
   loadPageNavigationHandlers("reloadDivOnPageNavigation", "dashboardWidget");
}


/**
 * Return:
 * true, if sortingColumn = sortingParameterValue and sortingParameterValuePrefix = "+", for example: return true if sortingColumn="user_email" and sortingParameterValue = "+user_email"
 * false, if sortingColumn = sortingParameterValue and sortingParameterValuePrefix = "-", for example: return true if sortingColumn="user_email" and sortingParameterValue = "-user_email"
 * null, if sortingParameterValue = null, of sortingColumn != sortingParameterValue
 *
 */
function isSortingOrderAscending(sortingColumn, sortingParameterValue) {
   if (sortingParameterValue == null) {
      return null;
   }

   if (sortingParameterValue.substring(1) == sortingColumn) {
      var sortingOrder = sortingParameterValue.charAt(0);
      if (sortingOrder == ASCENDING_ORDER_PREFIX) {
         return true;
      } else if (sortingOrder == DESCENDING_ORDER_PREFIX){
         return false;
      }
   }

   return null;
}
%>
