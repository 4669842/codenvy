<%
function queryResults(q) {
    var db = new Database("WSO2BAM_DATASOURCE");
    var result;
    try {
        result = db.query(q);
    }
    catch (e) {
        print("unable to query result :" + e);
    }
    finally {
        db.close();
    }

    return result;
}

function createTable(result) {
    var rows = [];
    var columns = []
    var columns2display = []

    for (var key in result[0]) {
        columns.push(key);
    }
    columns.sort();

    for (var col in columns) {
        columns2display.push(result[0][columns[col]]);
    }

    for (var i = 1; i < result.length; i++) {
        var row = []
        var obj = result[i];

        for (var col in columns) {
            row.push(obj[columns[col]]);
        }
        rows.push(row);
    }

    return {rows: rows, columns: columns2display};
}

function printTable(table) {	
    print('<table cellspacing="0" class="database-table" align="center">');
    print('<thead aria-hidden="false">');
    print('<tr>');
    
    // print first cell of header
    if (table.columns.length > 0) {
        print('<th class="database-table-header">');
        print(table.columns[0]);
        print('</th>');    	
    }
    
    // print other cells of header    
    for (var i = 1; i < table.columns.length; i++) {
        print('<th class="database-table-header">');
        print(table.columns[i]);
        print('</th>');
    }
    print('</tr>');
    print('</thead>');

    // print table body
    print('<tbody>');
    for (var i = 0; i < table.rows.length; i = i + 2) {
     	 // print odd row
    	 print('<tr>');

       // print first cell
       print('<td class="database-table-cell database-table-first-cell text-cursor">');
       print('<div style="outline-style: none;" tabindex="0">');
       print(table.rows[i][0]);
       print('</div>');
       print('</td>');
 
       // print another cells
    	 for (var j = 1; j < table.columns.length; j++) {
          print('<td class="database-table-cell">');
          print('<div style="outline-style: none;" tabindex="0">');
          print(table.rows[i][j]);
          print('</div>');
          print('</td>');
       }
       print('</tr>');
               
       // print pair row       
       if (i < table.rows.length - 1) {
          print('<tr class="pair-row">');
          
          // print first cell
        	 print('<td class="database-table-cell database-table-first-cell">');
          print('<div style="outline-style: none;" tabindex="0">');
          print(table.rows[i + 1][0]);
          print('</div>');
          print('</td>');
   
          // print another cells
        	 for (var j = 1; j < table.columns.length; j++) {
             print('<td class="database-table-cell">');
             print('<div style="outline-style: none;" tabindex="0">');
             print(table.rows[i + 1][j]);
             print('</div>');
             print('</td>');
          }
        	
          print('</tr>');
       }
    }
    
    print('<tfoot aria-hidden="true" style="display: none;"></tfoot>');
    print('</tbody>');
    print('</table>');
}

function printTablePageHeader() {
   print('<link href="../css/single-column.css" rel="stylesheet" type="text/css" />');
   print('<link href="../css/database-table.css" rel="stylesheet" type="text/css" />');
}

//load handlers of table events
function loadTableHandlers(ignoreLastRow) {
   print('<script src="../scripts/database-table.js"></script>');
   print('<script>databaseTable.setupRowHandlers(' + ignoreLastRow.toString() + ');</script>');
}

%>