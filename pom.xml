<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2014 Codenvy, S.A.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

    Contributors:
      Codenvy, S.A. - initial API and implementation

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>maven-depmgt-pom</artifactId>
        <groupId>com.codenvy</groupId>
        <version>1.8.3-SNAPSHOT</version>
    </parent>
    <groupId>com.codenvy.platform-api-client-java</groupId>
    <artifactId>codenvy-platform-api-client-java</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>Codenvy Platform API Client</name>
    <licenses>
        <license>
            <name>Eclipse Public License</name>
            <url>http://www.eclipse.org/legal/epl-v10.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>Kevin Pollet</name>
            <organization>Serli</organization>
            <organizationUrl>http://www.serli.com</organizationUrl>
        </developer>
        <developer>
            <name>St√©phane Daviet</name>
            <organization>Serli</organization>
            <organizationUrl>http://www.serli.com</organizationUrl>
        </developer>
    </developers>
    <properties>
        <codenvy.ide.path>${project.build.directory}/tomcat-ide</codenvy.ide.path>
        <license_years>2014</license_years>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <version.assembly-sdk>3.0.0-M19-SNAPSHOT</version.assembly-sdk>
        <version.build-helper-maven-plugin>1.8</version.build-helper-maven-plugin>
        <version.guava>15.0</version.guava>
        <version.jackson>2.3.2</version.jackson>
        <version.javax.ws.rs-api>2.0</version.javax.ws.rs-api>
        <version.jersey-client>2.8</version.jersey-client>
        <version.junit>4.11</version.junit>
        <version.maven-antrun-plugin>1.6</version.maven-antrun-plugin>
        <version.maven-bundle-plugin>2.4.0</version.maven-bundle-plugin>
        <version.maven-dependency-plugin>2.8</version.maven-dependency-plugin>
        <version.maven-failsafe-plugin>2.17</version.maven-failsafe-plugin>
        <version.mockito-all>1.8.4</version.mockito-all>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${version.jackson}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${version.jackson}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <version>${version.jackson}</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${version.guava}</version>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>${version.javax.ws.rs-api}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${version.jersey-client}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${version.mockito-all}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>codenvy-public-repo</id>
            <name>codenvy public</name>
            <url>https://maven.codenvycorp.com/content/groups/public/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>codenvy-public-repo</id>
            <name>codenvy public</name>
            <url>https://maven.codenvycorp.com/content/groups/public/</url>
        </pluginRepository>
    </pluginRepositories>
    <build>
        <testResources>
            <!-- Exclude binary resources from filtering to prevent side effects -->
            <testResource>
                <filtering>true</filtering>
                <directory>src/test/resources</directory>
                <excludes>
                    <exclude>*.zip</exclude>
                </excludes>
            </testResource>
            <testResource>
                <filtering>false</filtering>
                <directory>src/test/resources</directory>
                <includes>
                    <include>*.zip</include>
                </includes>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>${version.maven-bundle-plugin}</version>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>${project.groupId}</Bundle-SymbolicName>
                        <Export-Package>{local-packages}</Export-Package>
                        <Import-Package>org.glassfish.jersey.client,
							org.glassfish.jersey.message.internal, *</Import-Package>
                        <Bundle-ClassPath>patch.jar, .</Bundle-ClassPath>
                    </instructions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${version.build-helper-maven-plugin}</version>
                <executions>
                    <execution>
                        <id>codenvy-sdk-reserve-network-port</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <configuration>
                            <portNames>
                                <portName>port1</portName>
                                <portName>port2</portName>
                                <portName>port3</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${version.maven-failsafe-plugin}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${version.maven-dependency-plugin}</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.codenvy.sdk</groupId>
                                    <artifactId>assembly-sdk</artifactId>
                                    <version>${version.assembly-sdk}</version>
                                    <type>zip</type>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${codenvy.ide.path}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${version.maven-antrun-plugin}</version>
                <executions>
                    <execution>
                        <id>start-codenvy-sdk</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <delete dir="${codenvy.ide.path}/temp" />
                                <replace file="${codenvy.ide.path}/bin/setenv.sh" token="8080" value="${port1}" />
                                <replace file="${codenvy.ide.path}/bin/codenvy.sh" token="CATALINA_PID" value="CODENVY_PID" />
                                <replace file="${codenvy.ide.path}/conf/server.xml" token="8080" value="${port1}" />
                                <replace file="${codenvy.ide.path}/conf/server.xml" token="8009" value="${port2}" />
                                <replace file="${codenvy.ide.path}/conf/server.xml" token="8005" value="${port3}" />
                                <exec executable="sh" spawn="false">
                                    <arg value="${codenvy.ide.path}/bin/codenvy.sh" />
                                    <arg value="start" />
                                </exec>
                                <waitfor maxwait="1" maxwaitunit="minute">
                                    <resourcecontains resource="${codenvy.ide.path}/logs/catalina.out" substring="Server startup in" />
                                </waitfor>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-codenvy-sdk</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <exec executable="sh" spawn="false">
                                    <arg value="${codenvy.ide.path}/bin/codenvy.sh" />
                                    <arg value="stop" />
                                </exec>
                                <replace file="${codenvy.ide.path}/bin/codenvy.sh" token="CODENVY_PID" value="CATALINA_PID" />
                                <replace file="${codenvy.ide.path}/bin/setenv.sh" token="${port1}" value="8080" />
                                <replace file="${codenvy.ide.path}/conf/server.xml" token="${port1}" value="8080" />
                                <replace file="${codenvy.ide.path}/conf/server.xml" token="${port2}" value="8009" />
                                <replace file="${codenvy.ide.path}/conf/server.xml" token="${port3}" value="8005" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
